generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id            Int             @id @default(autoincrement())
  phone         String          @db.VarChar(15)
  unit          Int?
  ae_id         Int?
  role          String          @db.VarChar(255)
  status_id     Int?
  active        Boolean
  created_at    DateTime?       @default(dbgenerated("(now() AT TIME ZONE 'Asia/Bangkok'::text)")) @db.Timestamptz(6)
  updated_at    DateTime?       @default(dbgenerated("(now() AT TIME ZONE 'Asia/Bangkok'::text)")) @db.Timestamptz(6)
  created_by    Int
  updated_by    Int
  username      String?         @db.VarChar(255)
  email         String?         @unique @db.VarChar(255)
  fullname      String?         @db.VarChar(255)
  ae_area       ae_area?        @relation(fields: [ae_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  status        status?         @relation(fields: [status_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  requestorders requestorders[]
  taskorders    taskorders[]
}

model cars {
  id                Int          @id @default(autoincrement())
  car_number        String?      @db.VarChar(255)
  asset             String?      @db.VarChar(255)
  asset_class       Int?
  asset_description String?
  name              String?
  year              Int?
  capitalized_on    DateTime?    @db.Date
  service_life      Int?
  cost_center       String?      @db.VarChar(255)
  note              String?
  hp                Float?
  acquis_val        Float?
  accum_dep         Float?
  curr_bk_val       Float?
  active            Boolean?
  ae_id             Int?
  created_at        DateTime?    @default(dbgenerated("(now() AT TIME ZONE 'Asia/Bangkok'::text)")) @db.Timestamptz(6)
  updated_at        DateTime?    @default(dbgenerated("(now() AT TIME ZONE 'Asia/Bangkok'::text)")) @db.Timestamptz(6)
  created_by        Int
  updated_by        Int
  ae_area           ae_area?     @relation(fields: [ae_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  taskorders        taskorders[]
}

model locations {
  id              Int             @id @default(autoincrement())
  location_name   String?         @db.VarChar(255)
  land_number     Int?
  location_xy     String
  is_new_location Boolean?        @default(false)
  created_at      DateTime?       @default(dbgenerated("(now() AT TIME ZONE 'Asia/Bangkok'::text)")) @db.Timestamptz(6)
  updated_at      DateTime?       @default(dbgenerated("(now() AT TIME ZONE 'Asia/Bangkok'::text)")) @db.Timestamptz(6)
  created_by      Int
  updated_by      Int
  requestorders   requestorders[]
}

model activities {
  id              Int          @id @default(autoincrement())
  name            String       @db.VarChar(255)
  created_at      DateTime?    @default(dbgenerated("(now() AT TIME ZONE 'Asia/Bangkok'::text)")) @db.Timestamptz(6)
  updated_at      DateTime?    @default(dbgenerated("(now() AT TIME ZONE 'Asia/Bangkok'::text)")) @db.Timestamptz(6)
  created_by      Int
  updated_by      Int
  activity_number Int
  tool_types      tool_types[]
}

model tool_types {
  id               Int        @id @default(autoincrement())
  created_at       DateTime?  @default(dbgenerated("(now() AT TIME ZONE 'Asia/Bangkok'::text)")) @db.Timestamptz(6)
  updated_at       DateTime?  @default(dbgenerated("(now() AT TIME ZONE 'Asia/Bangkok'::text)")) @db.Timestamptz(6)
  created_by       Int
  updated_by       Int
  activity_id      Int
  price_ct_fm      Float?     @default(0)
  price_ct_rdc     Float?     @default(0)
  price_ne1_fm     Float?     @default(0)
  price_ne1_res    Float?     @default(0)
  price_suffix     String?
  tool_type_name   String
  tool_type_number Int?
  activities       activities @relation(fields: [activity_id], references: [id])
  tools            tools[]
}

model tools {
  id             Int          @id @default(autoincrement())
  name           String?      @db.VarChar(255)
  asset          String?      @unique @db.VarChar(255)
  year           Int?
  capitalized_on DateTime     @db.Date
  status_id      Int?
  created_at     DateTime?    @default(dbgenerated("(now() AT TIME ZONE 'Asia/Bangkok'::text)")) @db.Timestamptz(6)
  updated_at     DateTime?    @default(dbgenerated("(now() AT TIME ZONE 'Asia/Bangkok'::text)")) @db.Timestamptz(6)
  created_by     Int
  updated_by     Int
  ae_id          Int?
  tool_type_id   Int?
  taskorders     taskorders[]
  status         status?      @relation(fields: [status_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  ae_area        ae_area?     @relation(fields: [ae_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tool_type      tool_types?  @relation(fields: [tool_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model ae_area {
  id             Int              @id @default(autoincrement())
  name           String?          @db.VarChar(255)
  created_at     DateTime?        @default(dbgenerated("(now() AT TIME ZONE 'Asia/Bangkok'::text)")) @db.Timestamptz(6)
  updated_at     DateTime?        @default(dbgenerated("(now() AT TIME ZONE 'Asia/Bangkok'::text)")) @db.Timestamptz(6)
  created_by     Int
  updated_by     Int
  operation_area operation_area[]
  tools          tools[]
  users          users[]
  cars           cars[]
  requestorders  requestorders[]
}

model operation_area {
  id               Int             @id @default(autoincrement())
  operation_area   String?         @db.VarChar(255)
  area_number      Int?            @unique
  created_at       DateTime?       @default(dbgenerated("(now() AT TIME ZONE 'Asia/Bangkok'::text)")) @db.Timestamptz(6)
  updated_at       DateTime?       @default(dbgenerated("(now() AT TIME ZONE 'Asia/Bangkok'::text)")) @db.Timestamptz(6)
  created_by       Int
  updated_by       Int
  ae_id            Int?
  customer_type_id Int
  company_farm     company_farm[]
  ae_area          ae_area?        @relation(fields: [ae_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  customer_type    customer_type   @relation(fields: [customer_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  requestorders    requestorders[]
}

model company_farm {
  id             Int             @id @default(autoincrement())
  area_number    Int
  zone           String?         @db.VarChar(255)
  farm_name      String?
  created_at     DateTime?       @default(dbgenerated("(now() AT TIME ZONE 'Asia/Bangkok'::text)")) @db.Timestamptz(6)
  updated_at     DateTime?       @default(dbgenerated("(now() AT TIME ZONE 'Asia/Bangkok'::text)")) @db.Timestamptz(6)
  created_by     Int
  updated_by     Int
  operation_area operation_area  @relation(fields: [area_number], references: [area_number], onDelete: NoAction)
  requestorders  requestorders[]
}

model customer_type {
  id             Int              @id @default(autoincrement())
  name           String?          @db.VarChar(255)
  created_at     DateTime?        @default(dbgenerated("(now() AT TIME ZONE 'Asia/Bangkok'::text)")) @db.Timestamptz(6)
  updated_at     DateTime?        @default(dbgenerated("(now() AT TIME ZONE 'Asia/Bangkok'::text)")) @db.Timestamptz(6)
  created_by     Int
  updated_by     Int
  operation_area operation_area[]
  requestorders  requestorders[]
}

model status {
  id            Int             @id @default(autoincrement())
  name          String?         @db.VarChar(255)
  created_at    DateTime?       @default(dbgenerated("(now() AT TIME ZONE 'Asia/Bangkok'::text)")) @db.Timestamptz(6)
  updated_at    DateTime?       @default(dbgenerated("(now() AT TIME ZONE 'Asia/Bangkok'::text)")) @db.Timestamptz(6)
  created_by    Int
  updated_by    Int
  users         users[]
  requestorders requestorders[]
  taskorders    taskorders[]
  tools         tools[]
  bills         bills[]
}

model attachment {
  id            Int             @id @default(autoincrement())
  file_name     String?         @db.VarChar(255)
  file_path     String?         @db.VarChar(255)
  file_type     String?         @db.VarChar(255)
  file_data     Bytes?          @db.ByteA
  created_at    DateTime?       @default(dbgenerated("(now() AT TIME ZONE 'Asia/Bangkok'::text)")) @db.Timestamptz(6)
  updated_at    DateTime?       @default(dbgenerated("(now() AT TIME ZONE 'Asia/Bangkok'::text)")) @db.Timestamptz(6)
  created_by    Int
  updated_by    Int
  requestorders requestorders[]
}

model requestorders {
  id                  Int             @id @default(autoincrement())
  work_order_number   String?         @db.VarChar(255)
  customer_type_id    Int?
  operation_area_id   Int?
  quota_number        String?         @db.VarChar(255)
  company_farm_id     Int?
  zone                String?         @db.VarChar(255)
  farmer_name         String?         @db.VarChar(255)
  land_number         Int?
  ap_month_year       String?         @db.VarChar(255)
  supervisor_fullname String?         @db.VarChar(255)
  ae_id               Int?
  target_area         Float?          @default(0)
  actual_area         Float?          @default(0)
  active              Boolean
  evidence            Int?
  sale                Float?
  status_id           Int?
  supervisor_id       Int?
  location_id         Int?
  unit_head_id        Int?
  comment             String?
  created_at          DateTime?       @default(dbgenerated("(now() AT TIME ZONE 'Asia/Bangkok'::text)")) @db.Timestamptz(6)
  updated_at          DateTime?       @default(dbgenerated("(now() AT TIME ZONE 'Asia/Bangkok'::text)")) @db.Timestamptz(6)
  created_by          Int
  updated_by          Int
  customer_type       customer_type?  @relation(fields: [customer_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  operation_area      operation_area? @relation(fields: [operation_area_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  company_farm        company_farm?   @relation(fields: [company_farm_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  ae_area             ae_area?        @relation(fields: [ae_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  status              status?         @relation(fields: [status_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  locations           locations?      @relation(fields: [location_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users               users?          @relation(fields: [supervisor_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  attachment          attachment?     @relation(fields: [evidence], references: [id], onDelete: NoAction, onUpdate: NoAction)
  taskorders          taskorders[]
  bills               bills[]
}

model taskorders {
  id               Int            @id @default(autoincrement())
  request_order_id Int?
  car_id           Int?
  tool_id          Int?
  assigned_user_id Int?
  area_target      Float?         @default(0)
  area_actual      Float?         @default(0)
  price            Float?         @default(0)
  ap_date          DateTime?      @db.Date
  oil_slip         String?
  oil_start_mile   Int?
  start_mile       Int?
  end_mile         Int?
  oil_start        Float?
  oil_end          Float?
  car_start_hour   String?        @db.VarChar(255)
  car_end_hour     String?        @db.VarChar(255)
  start_timer      String?        @db.VarChar(255)
  end_timer        String?        @db.VarChar(255)
  status_id        Int?
  comment          String?
  created_at       DateTime?      @default(dbgenerated("(now() AT TIME ZONE 'Asia/Bangkok'::text)")) @db.Timestamptz(6)
  updated_at       DateTime?      @default(dbgenerated("(now() AT TIME ZONE 'Asia/Bangkok'::text)")) @db.Timestamptz(6)
  created_by       Int
  updated_by       Int
  status           status?        @relation(fields: [status_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users            users?         @relation(fields: [assigned_user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  cars             cars?          @relation(fields: [car_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  requestorders    requestorders? @relation(fields: [request_order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tools            tools?         @relation(fields: [tool_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model bills {
  id               Int            @id @default(autoincrement())
  target_price     Float?         @default(0)
  actual_price     Float?         @default(0)
  status_id        Int?
  request_order_id Int?
  created_at       DateTime?      @default(dbgenerated("(now() AT TIME ZONE 'Asia/Bangkok'::text)")) @db.Timestamptz(6)
  updated_at       DateTime?      @default(dbgenerated("(now() AT TIME ZONE 'Asia/Bangkok'::text)")) @db.Timestamptz(6)
  created_by       Int
  updated_by       Int
  status           status?        @relation(fields: [status_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  requestorders    requestorders? @relation(fields: [request_order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
